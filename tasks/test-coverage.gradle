apply plugin: "jacoco"

junitPlatform {
    details "summary"
}

afterEvaluate {
    def junitPlatformTestTask = (JavaExec) project.tasks.getByName("junitPlatformTest")

    jacoco {
        toolVersion = "0.8.1"
        applyTo(junitPlatformTestTask)
    }

    project.task(type: JacocoReport, "junitPlatformJacocoReport") {
        executionData(junitPlatformTestTask)
        sourceSets(sourceSets.main)

        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)

        reports {
            xml.enabled true
            xml.destination file("${buildDir}/jacoco/report.xml")
            html.enabled true
            html.destination file("${buildDir}/jacoco/html")
        }
    }

    project.task(type: JacocoCoverageVerification, "junitPlatformJacocoCoverageReport") {
        executionData(junitPlatformTestTask)
        sourceSets(sourceSets.main)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)
        violationRules {
            rule {
                limit {
                    minimum = 1
                    counter = "BRANCH"
                    value = "COVEREDRATIO"
                }
            }
            rule {
                enabled = true
                element = "CLASS"
                includes = ["me.aikin.seed.AboutController"]

                limit {
                    counter = "BRANCH"
                    value = "COVEREDRATIO"
                    minimum = 1
                }
            }
        }
    }
}
